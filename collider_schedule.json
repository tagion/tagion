{
  "units": {
    "collider_test": {
      "args": ["-f$WORKDIR"],
      "envs": {
        "WORKDIR": "$(HOME)/work"
      },
      "stages": ["example"],
      "timeout": 0.0
    },
    "receive_epoch": {
      "args": [],
      "envs": {},
      "stages": ["none"],
      "timeout": 0.0
    },
    "dart_test": {
      "args": [],
      "envs": {},
      "stages": ["commit", "dart"],
      "timeout": 0.0
    },
    "dart_deep_rim_test": {
      "args": [],
      "envs": {},
      "stages": ["commit", "dart"],
      "timeout": 0.0
    },
    "dart_pseudo_random_archives": {
      "args": [],
      "envs": {},
      "stages": ["commit", "dart"],
      "timeout": 0.0
    },
    "dart_sync": {
      "args": [],
      "envs": {},
      "stages": ["commit", "dart"],
      "timeout": 0.0
    },
    "dart_partial_sync": {
      "args": [],
      "envs": {},
      "stages": ["performance"],
      "timeout": 0.0
    },
    "dart_stress": {
      "args": [],
      "envs": {},
      "stages": ["dart_stress", "performance", "acceptance"],
      "timeout": 0.0
    },
    "dart_insert_remove_stress": {
      "args": [],
      "envs": {},
      "stages": ["commit", "performance"],
      "timeout": 0.0
    },
    "dart_sync_stress": {
      "args": [],
      "envs": {},
      "stages": ["performance"],
      "timeout": 0.0
    },
    "actor_tests": {
      "args": [],
      "envs": {},
      "stages": ["commit"],
      "timeout": 0.0
    },
    "rpcserver": {
      "args": [],
      "envs": {},
      "stages": ["commit"],
      "timeout": 0.0
    },
    "hirpc_verifier": {
      "args": [],
      "envs": {},
      "stages": ["commit"],
      "timeout": 0.0
    },
    "hashgraph_test": {
      "args": ["5", "5000"],
      "envs": {},
      "stages": ["hashgraph", "hashgraph_test"],
      "timeout": 0.0
    },
    "hashgraph_contributors": {
      "args": ["Alice", "Bob", "Carol", "Dave", "Elisa", "Freja", "Nonvoting"],
      "envs": {},
      "stages": ["none"],
      "timeout": 0.0
    },
    "hashgraph_exclude": {
      "args": ["Alice", "Bob", "Carol", "Dave", "Elisa", "Freja", "Gretha"],
      "envs": {},
      "stages": ["none"],
      "timeout": 0.0
    },
    "tvm_betterc": {
      "args": [
          "i32.wast", "i64.wast", "conversions.wast",
          "int_literals.wast", "int_exprs.wast",
          "f32.wast", "f64.wast",
          "f32_cmp.wast", "f64_cmp.wast",
          "float_misc.wast", "select.wast",
          "i32_export.wast", "i64_export.wast", "conversions_export.wast", 
          "int_literals_export.wast", "int_exprs_export.wast",
          "f32_export.wast", "f64_export.wast",
          "f32_cmp_export.wast", "f64_cmp_export.wast",
          "float_misc_export.wast",
          "br_block.wast", "br_if_block.wast", "br_table_block.wast",
          "if_block.wast", "loop_block.wast"
      ],
      "envs": {
        "DCOMPILE": "dmd -I$(REPOROOT)/tvm $(REPOROOT)/tvm/foundation/wasm.d $(REPOROOT)/tvm/foundation/error.d $(REPOROOT)/tvm/foundation/math.d -I$(REPOROOT)/tvm -g -unittest -main",
        "imports": "wasm=foundation.wasm math=foundation.math error=foundation.error std.typecons:Tuple",
        "attributes": "@safe"
      },
      "stages": ["tvm", "tvm_new",  "tvm_export", "tvm_test", "br", "br_if", "br_table", "loop", "if_block", "call_indirect", "element", "conversions_export"],
      "extend" : {
        "tvm_export" : {
            "args": [
                "i32_export.wast", "i64_export.wast", "conversions_export.wast", 
                "int_literals_export.wast", "int_exprs_export.wast",
                "f32_export.wast", "f64_export.wast",
                "f32_cmp_export.wast", "f64_cmp_export.wast",
                "float_misc_export.wast"
            ]
        },
        "tvm_new" : {
            "args": [
          "i32.wast", "i64.wast", "conversions.wast",
          "int_literals.wast", "int_exprs.wast",
          "f32.wast", "f64.wast",
          "f32_cmp.wast", "f64_cmp.wast",
          "float_misc.wast", "select.wast",
          "i32_export.wast", "i64_export.wast", "conversions_export.wast", 
          "int_literals_export.wast", "int_exprs_export.wast",
          "f32_export.wast", "f64_export.wast",
          "f32_cmp_export.wast", "f64_cmp_export.wast",
          "float_misc_export.wast",
          "br_block.wast", "br_if_block.wast", "br_table_block.wast",
          "if_block.wast"
            ]
        },
        "br_table" : {
            "args" : [
                "br_table_block.wast"

            ]
        },
        "br_if" : {
            "args" : [
                "br_if_block.wast"
            ]
        },
         "br" : {
            "args" : [
                "br_block.wast"
            ]
        },
        "loop" : {
            "args" : [
                "loop_block.wast"
            ]
        },
        "if_block" : {
            "args" : [
                "if_block.wast", "loop_block.wast"
            ]
        },
        "tvm_test" : {
            "args" : [
                "br_if_block.wast"
            ]
        },
        "call_indirect" : {
          "args" : [
            "call_indirect_2.wast"
          ]
        },
        "conversions_export" : {
          "args" : [
            "conversions_export.wast"
          ]
        },
        "element" : {
          "args" : [
            "elem.wast"
          ]
        }
      },
      "timeout": 0.0
    },
    "epoch_creator": {
      "args": [],
      "envs": {},
      "stages": ["commit", "epoch"],
      "timeout": 0.0
    },
    "tvm_service": {
      "args": [],
      "envs": {},
      "stages": ["tvm_service", "services"],
      "timeout": 0.0
    },
    "collector": {
      "args": [],
      "envs": {},
      "stages": ["commit", "collector", "services"],
      "timeout": 0.0
    },
    "transaction_service": {
      "args": [],
      "envs": {},
      "stages": ["transaction_service", "services"],
      "timeout": 0.0
    },
    "dart_service": {
      "args": [],
      "envs": {},
      "stages": ["commit", "dart_service", "services"],
      "timeout": 0.0
    },
    "send_contract": {
      "args": [],
      "envs": {},
      "stages": ["acceptance", "contract", "services"],
      "timeout": 0.0
    },
    "double_spend": {
      "args": [],
      "envs": {},
      "stages": ["acceptance", "double_spend"],
      "timeout": 0.0
    },
    "spam_double_spend": {
      "args": [],
      "envs": {
            "WAIT_UNTIL_ALIVE" : "10",
            "EPOCH_TIMEOUT" : "15", 
            "CONTRACT_TIMEOUT" : "100" 
      },
      "stages": ["acceptance", "spam_double_spend"],
      "timeout": 0.0
    },
    "malformed_contract": {
      "args": [],
      "envs": {},
      "stages": ["acceptance", "malformed_contract"],
      "timeout": 0.0
    },
    "genesis_test": {
      "args": [],
      "envs": {
            "EPOCH_TIMEOUT" : "100" 
      },
      "stages": ["acceptance", "genesis"],
      "timeout": 0.0
    },
    "trt_service": {
      "args": [],
      "envs": {},
      "stages": ["acceptance", "trt", "trt_service"],
      "timeout": 0.0
    },
    "big_contract": {
      "args": [],
      "envs": {},
      "stages": ["acceptance", "big_contract"],
      "timeout": 0.0
    },
    "subscription_test": {
      "args": [],
      "envs": {},
      "stages": ["commit", "subscription"],
      "timeout": 0.0
    },
    "transaction": {
      "args": [],
      "envs": {
        "SHELL_URI": "http://0.0.0.0:4000",
        "MR_PUB_URI": "tcp://0.0.0.0:4002",
        "MR_SUB_URI": "tcp://127.0.0.1:4002",
        "WS_PUB_URI": "ws://0.0.0.0:4000/api/v1/subscribe",
        "SUBSCRIPTION": "TRANSACTION_TEST_SUBSCRIPTION_",
        "PREFIX": "TRANSACTION_Node_%s_"
      },
      "stages": ["shell", "acceptance"],
      "timeout": 0.0
    },
    "run_epochs": {
      "args": ["1", "10000", "5"],
      "envs": {},
      "stages": ["epochs"],
      "timeout": 0.0
    },
    "trt_contract": {
      "args": [],
      "envs": {},
      "stages": ["acceptance", "trt", "trt_contract"],
      "timeout": 0.0
    },
    "run_fiber_epoch": {
      "args": [
        "--rounds=1000",
        "-N7",
        "100,2",
        "-k",
        "-d"
                    
      ],
      "envs": {},
      "stages": [
        "fiber", "decided"
      ],
      "timeout": 0.0
    },
    "mode1": {
      "args": [],
      "envs": {},
      "stages": ["acceptance", "mode1"],
      "timeout": 0.0
    },
    "dartutil_test": {
      "args": [],
      "envs": {},
      "stages": ["tools", "dartutil_test"],
      "timeout": 0.0
    },
    "hirep_test": {
      "args": [],
      "envs": {},
      "stages": ["tools", "hirep_test"],
      "timeout": 0.0
    },
    "hibonutil_test": {
      "args": [],
      "envs": {},
      "stages": ["tools", "hibonutil_test"],
      "timeout": 0.0
    },
    "wallet_test": {
      "args": [],
      "envs": {},
      "stages": ["tools", "wallet_test"],
      "timeout": 0.0
    },
    "epoch_shutdown": {
      "args": [],
      "envs": {},
      "stages": ["epoch_shutdown"],
      "timeout": 0.0
    },
    "node_interface": {
      "args": [],
      "envs": {},
      "stages": ["node_interface", "commit"],
      "timeout": 0.0
    },
    "remote_sample": {
      "args": [],
      "envs": {
          "SHELL_ADDRESSES": "http://0.0.0.0:8080",
          "NODE_DART_ADDRESSES" : "abstract://node0/DART_NEUEWELLE abstract://node1/DART_NEUEWELLE",
          "NODE_INPUT_ADDRESSES" : "abstract://node0/CONTRACT_NEUEWELLE",
          "NODE_SUBSCRIPTION_ADDRESSES": "abstract://node0/SUBSCRIPTION_NEUEWELLE"
      },
      "stages": ["remote"],
      "timeout": 0.0
    },
    "nng_test": {
      "args": [],
      "envs": {},
      "stages": ["nng"],
      "timeout": 0.0
    },
    "test_net" : {
        "args" : [],
        "envs" : {},
        "stages" : ["test_net"],
        "background" : true,
        "timeout" : 0.0
    },
    "godcontract": {
      "depend" : {
         "test_net" : "started"
      },
      "timeout" : 3.0,
      "stages" : ["godcontract"]
    },
    "dart_synchronization": {
      "timeout" : 3.0,
      "stages" : ["dart_synchronization", "commit"]
    },
    "recorder_synchronizer": {
      "timeout" : 3.0,
      "stages" : ["recorder_synchronizer", "commit"]
    },
    "replicator_service": {
      "timeout" : 3.0,
      "stages" : ["replicator_service", "commit"]
    },
    "distributed_dart_synchronization": {
      "envs": {
            "DISTRIBUTION_TIMEOUT" : "30" 
      },
      "timeout" : 3.0,
      "stages" : ["distributed_dart_synchronization", "acceptance"]
    },
    "distributed_dart_synchronization_resilience": {
      "envs": {
            "DISTRIBUTION_TIMEOUT" : "30" 
      },
      "timeout" : 3.0,
      "stages" : ["distributed_dart_synchronization_resilience", "acceptance"]
    }
  }
}
